{"version":3,"sources":["Query.js","AddSeriesButton.js","SeriesList.js","App.js","serviceWorker.js","index.js"],"names":["Query","props","style","display","searchWords","onChangeSearchWords","searchTags","onChangeSearchTags","SearchBar","flex","field","type","value","onChange","TagBar","paddingLeft","tagField","AddSeriesButton","backgroundColor","position","right","bottom","width","height","border","borderRadius","onClick","onAddSeries","sidebar","content","alignSelf","borderLeft","SeriesList","seriesArray","map","series","index","key","Date","now","toString","onDeleteSeries","onAddEntry","saveEntry","deleteEntry","Series","margin","listStyle","entries","entry","length","AddEntryButton","clickable","DeleteSeriesButton","Entry","React","useState","gist","setGist","note","setNote","tags","setTags","editing","setEditing","onToggle","alignItems","borderTop","onChangeGist","e","target","onChangeNote","onChangeTags","TimeStamp","padding","fontSize","createdAt","updatedAt","Editor","onKeyDown","resizeTextarea","scrollHeight","flexDirection","fontWeight","fontStyle","whiteSpace","onKeyUp","onFocus","Info","isExpanded","setIsExpanded","createSeries","createEntry","toLocaleString","minHeight","borderBottom","ExportButton","onExport","App","setSearchWords","setSearchTags","JSON","parse","localStorage","getItem","setSeriesArray","bottomRef","useRef","update","setItem","stringify","maxWidth","results","lowercase","toLowerCase","filter","some","includes","tagsArray","split","tag","indexOf","querySeriesArray","newSeriesArray","splice","newSeries","newEntry","updateEntry","console","log","ref","current","scrollIntoView","behavior","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAGaA,G,MAAQ,SAACC,GAIlB,OACI,yBAAKC,MAJK,CACVC,QAAS,SAIL,kBAAC,EAAD,CACIC,YAAaH,EAAMG,YACnBC,oBAAqBJ,EAAMI,sBAE/B,kBAAC,EAAD,CACIC,WAAYL,EAAMK,WAClBC,mBAAoBN,EAAMM,wBAKpCC,EAAY,SAACP,GAIf,OACI,yBAAKC,MAJK,CACVO,KAAM,YAIF,2BACIP,MAAOQ,EACPC,KAAK,OACLC,MAAOX,EAAMG,YACbS,SAAUZ,EAAMI,wBAK1BS,EAAS,SAACb,GAKZ,OACI,yBAAKC,MALK,CACVO,KAAM,UACNM,YAAa,SAIT,2BACIb,MAAOc,EACPL,KAAK,OACLC,MAAOX,EAAMK,WACbO,SAAUZ,EAAMM,uBC5CnBU,EAAkB,SAAChB,GAW5B,OACI,yBACIC,MAZM,CACVgB,gBAAiB,aACjBC,SAAU,QACVC,MAAO,KACPC,OAAQ,KACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,sBACRC,aAAc,OAKVC,QAASzB,EAAM0B,e,yjBCb3B,IAEMC,EAAU,CACZN,MAAM,GAAD,OAFmB,GAEnB,MAEHO,EAAU,CACZP,MAAM,GAAD,OAAK,GAAL,KACLQ,UAAW,UACXC,WARW,iBASXhB,YAAa,QAGJiB,EAAa,SAAC/B,GACvB,OACI,4BACKA,EAAMgC,YAAYC,KAAI,SAACC,EAAQC,GAAT,OACnB,kBAAC,EAAD,CACIC,KAAMC,KAAKC,MAAQH,GAAOI,SAAS,IACnCL,OAAQA,EACRM,eAAgBxC,EAAMwC,eAAeN,GACrCO,WAAYzC,EAAMyC,WAAWP,GAC7BQ,UAAW1C,EAAM0C,UAAUR,GAC3BS,YAAa3C,EAAM2C,YAAYT,UAK7CU,EAAS,SAAC5C,GAKZ,OACI,wBAAIC,MALM,CACV4C,OAAQ,SACRC,UAAW,SAIP,4BACK9C,EAAMkC,OAAOa,QAAQd,KAAI,SAACe,EAAOb,GAAR,OACtB,kBAAC,EAAD,CACIC,KAAMC,KAAKC,MAAQH,GAAOI,SAAS,IACnCS,MAAOA,EACPN,UAAW1C,EAAM0C,UAAUM,GAC3BL,YAAa3C,EAAM2C,kBAI1B3C,EAAMkC,OAAOa,QAAQE,OAAS,EACzB,yBAAKhD,MAAO,CAACC,QAAS,SACpB,yBAAKD,MAAO0B,IACZ,kBAAC,EAAD,CACIc,WAAYzC,EAAMyC,cAI1B,yBAAKxC,MAAO,CAACC,QAAS,SAClB,kBAAC,EAAD,CAAoBsC,eAAgBxC,EAAMwC,iBAC1C,kBAAC,EAAD,CACIC,WAAYzC,EAAMyC,gBAOxCS,EAAiB,SAAClD,GACpB,IAAMC,EAAK,KACJkD,EADI,GAEJvB,EAFI,CAGPX,gBAAiB,eAErB,OAAO,yBACHhB,MAAOA,EACPwB,QAASzB,EAAMyC,cAGjBW,EAAqB,SAACpD,GACxB,IAAMC,EAAK,KACJkD,EADI,GAEJxB,EAFI,CAGPV,gBAAiB,eAErB,OACI,yBACIhB,MAAOA,EACPwB,QAASzB,EAAMwC,kBAIrBa,EAAQ,SAACrD,GAAW,IAAD,EACGsD,IAAMC,SAASvD,EAAMgD,MAAMQ,MAD9B,mBACdA,EADc,KACRC,EADQ,OAEGH,IAAMC,SAASvD,EAAMgD,MAAMU,MAF9B,mBAEdA,EAFc,KAERC,EAFQ,OAGGL,IAAMC,SAASvD,EAAMgD,MAAMY,MAH9B,mBAGdA,EAHc,KAGRC,EAHQ,OAISP,IAAMC,SACf,IAAhBC,EAAKP,QACc,IAAhBS,EAAKT,QACW,IAAhBW,EAAKX,QAPQ,mBAIda,EAJc,KAILC,EAJK,KAafC,EAAW,WACTF,IACIN,EAAKP,OAAS,GACXS,EAAKT,OAAS,GACdW,EAAKX,OAAS,EACjBjD,EAAM0C,UAAUc,EAAME,EAAME,GAC3B5D,EAAM2C,eAEfoB,GAAYD,IAQhB,OACI,wBAAI7D,MANM,CACVC,QAAS,OACT+D,WAAY,aACZC,UAAW,8BAIP,kBAAC,EAAD,CACIlB,MAAOhD,EAAMgD,MACbc,QAASA,EACTrC,QAASuC,IAEZF,EACK,kBAAC,EAAD,CACEd,MAAOhD,EAAMgD,MACbQ,KAAMA,EACNW,aA/BK,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAO1D,QAgC7B+C,KAAMA,EACNY,aAhCK,SAACF,GAAD,OAAOT,EAAQS,EAAEC,OAAO1D,QAiC7BiD,KAAMA,EACNW,aAjCK,SAACH,GAAD,OAAOP,EAAQO,EAAEC,OAAO1D,QAkC7BqD,SAAUA,IAEZ,kBAAC,EAAD,CACER,KAAMA,EACNE,KAAMA,EACNE,KAAMA,MAMpBY,EAAY,SAACxE,GACf,IAAMC,EAAK,KACJkD,EADI,GAEJxB,EAFI,CAGPV,gBAAiBjB,EAAM8D,QAAU,YAAc,QAC/CW,QAAS,SACTC,SAAU,QAEd,OACI,yBACIzE,MAAOA,EACPwB,QAASzB,EAAMyB,SAEdzB,EAAMgD,MAAM2B,UAJjB,KAI8B3E,EAAMgD,MAAM4B,UAJ1C,MAQFC,EAAS,SAAC7E,GACZ,IAAM8E,EAAY,SAACV,GACD,UAAVA,EAAEhC,KAAiBpC,EAAMgE,YAE3Be,EAAiB,SAACX,GACpBA,EAAEC,OAAOpE,MAAMqB,OAAS,UACxB8C,EAAEC,OAAOpE,MAAMqB,OAAf,UAA2B8C,EAAEC,OAAOW,aAApC,OAGE/E,EAAK,KACJ2B,EADI,CAEP1B,QAAS,OACT+E,cAAe,SACfhB,WAAY,UACZS,SAAU,SAEd,OACI,yBAAKzE,MAAOA,GACR,2BACIA,MAAK,KAAMQ,EAAN,CAAayE,WAAY,SAC9BxE,KAAK,OACLC,MAAOX,EAAMwD,KACb5C,SAAUZ,EAAMmE,aAChBW,UAAWA,IAEf,8BACI7E,MAAK,KACEQ,EADF,CAED0E,UAAW,SACXC,WAAY,aAEhBzE,MAAOX,EAAM0D,KACb9C,SAAUZ,EAAMsE,aAChBe,QAASN,EACTO,QAASP,IAEb,2BACI9E,MAAOc,EACPL,KAAK,OACLC,MAAOX,EAAM4D,KACbhD,SAAUZ,EAAMuE,aAChBO,UAAWA,MAKrBS,EAAO,SAACvF,GAAW,IAAD,EACgBsD,IAAMC,UAAS,GAD/B,mBACbiC,EADa,KACDC,EADC,KAKdxF,EAAK,KACJkD,EADI,GAEJvB,EAFI,CAGP1B,QAAS,OACT+E,cAAe,SACfhB,WAAY,UACZS,SAAU,SAEd,OACI,yBACIzE,MAAOA,EACPwB,QAbS,kBAAMgE,GAAeD,KAe7BA,EACK,yBAAKvF,MAAO,CAACgB,gBAAiB,SAAUiE,WAAY,SAAUlF,EAAMwD,MACpE,yBAAKvD,MAAO,CAACiF,WAAY,SAAUlF,EAAMwD,MAC9CgC,GACE,yBAAKvF,MAAO,CAACkF,UAAW,SAAUC,WAAY,aAC5CpF,EAAM0D,MAEV8B,GACE,6BACExF,EAAM4D,Q,yjBCrOvB,IAAM8B,EAAe,eAAC3C,EAAD,uDAAW,GAAX,MAAmB,CAACA,YACnC4C,EACF,eACInC,EADJ,uDACW,GACPE,EAFJ,uDAEW,GACPE,EAHJ,uDAGW,GAHX,MAIM,CACFe,WAAW,IAAItC,MAAOuD,eAAe,SACrChB,WAAW,IAAIvC,MAAOuD,eAAe,SACrCpC,OAAME,OAAME,SAYPT,EAAY,CACrB0C,UAAW,QAEFpF,EAAK,KACX0C,EADW,CAEdsB,QAAS,SACTqB,aAPW,mBASF/E,EAAQ,KACdoC,EADc,CAEjBsB,QAAS,SACTlD,OAZW,iBAaXC,aAAc,SAGZuE,EAAe,SAAC/F,GAAD,OACjB,yBAAKC,MAAK,KAAMkD,EAAN,CAAiBlC,gBAAiB,SAASQ,QAASzB,EAAMgG,YAgGzDC,EA9FH,WAAO,IAAD,EACwB3C,IAAMC,SAAS,IADvC,mBACPpD,EADO,KACM+F,EADN,OAEsB5C,IAAMC,SAAS,IAFrC,mBAEPlD,EAFO,KAEK8F,EAFL,OAIwB7C,IAAMC,SAAS6C,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,IAJ1F,mBAIPvE,EAJO,KAIMwE,EAJN,KAKRC,EAAYnD,IAAMoD,OAAO,MAyBzBC,EAAS,kBAAML,aAAaM,QAAQ,cAAeR,KAAKS,UAAU7E,KA0CxE,OACI,yBAAK/B,MANQ,CACb6G,SAAU,QACVjE,OAAQ,SACR4B,QAAS,SAIL,kBAAC,EAAD,CACItE,YAAaA,EACbC,oBArEgB,SAACgE,GAAD,OAAO8B,EAAe9B,EAAEC,OAAO1D,QAsE/CN,WAAYA,EACZC,mBAtEe,SAAC8D,GAAD,OAAO+B,EAAc/B,EAAEC,OAAO1D,UAwEjD,kBAAC,EAAD,CACIqB,YAxEa,WACrB,IAAI+E,EAAO,YAAO/E,GAClB,GAAI7B,EAAa,CACb,IAAM6G,EAAY7G,EAAY8G,cAC9BF,EAAUA,EAAQG,QAAO,SAAAhF,GAAM,OAAIA,EAAOa,QAAQoE,MAC9C,SAAAnE,GAAK,OAAIA,EAAM2B,UAAUsC,cAAcG,SAASJ,IACzChE,EAAM4B,UAAUqC,cAAcG,SAASJ,IACvChE,EAAMQ,KAAKyD,cAAcG,SAASJ,IAClChE,EAAMU,KAAKuD,cAAcG,SAASJ,SAGjD,GAAI3G,EAAY,CACZ,IAAMgH,EAAYhH,EAAW4G,cAAcK,MAAM,KACjDP,EAAUA,EAAQG,QAAO,SAAAhF,GAAM,OAAIA,EAAOa,QAAQoE,MAC9C,SAAAnE,GAAK,OAAIA,EAAMY,KAAKqD,cAAcK,MAAM,KAAKH,MAAK,SAAAI,GAAG,OAAIF,EAAUG,QAAQD,IAAQ,WAI3F,OAAOR,EAsDcU,GACbjF,eA5CW,SAAAN,GAAM,OAAI,WAC7B,IAAMwF,EAAc,YAAO1F,GAC3B0F,EAAeC,OAAOD,EAAeF,QAAQtF,GAAS,GACtDsE,EAAekB,GACff,MAyCQlE,WAvCO,SAAAP,GAAM,OAAI,WACzB,IAAMwF,EAAc,YAAO1F,GACrB4F,EAAYF,EAAeA,EAAeF,QAAQtF,IACxD0F,EAAU7E,QAAV,sBAAwB6E,EAAU7E,SAAlC,CAA2C4C,MAC3Ca,EAAekB,GACff,MAmCQjE,UAhCM,SAAAR,GAAM,OAAI,SAAAc,GAAK,OAAI,SAACQ,EAAME,EAAME,GAC9C,IAAM8D,EAAc,YAAO1F,GACrB4F,EAAYF,EAAeA,EAAeF,QAAQtF,IACxD0F,EAAU7E,QAAQ6E,EAAU7E,QAAQyE,QAAQxE,IAnFhC,SAACA,EAAOQ,EAAME,EAAME,GACpC,IAAMiE,EAAQ,KAAO7E,GAKrB,OAJA6E,EAASjD,WAAY,IAAIvC,MAAOuD,eAAe,SAC/CiC,EAASrE,KAAOA,EAChBqE,EAASnE,KAAOA,EAChBmE,EAASjE,KAAOA,EACTiE,EA6EmDC,CAAY9E,EAAOQ,EAAME,EAAME,GACrF4C,EAAekB,GACff,OA4BQhE,YA1BQ,SAAAT,GAAM,OAAI,SAAAc,GAC1B,IAAM0E,EAAc,YAAO1F,GACrB4F,EAAYF,EAAeA,EAAeF,QAAQtF,IACxD0F,EAAU7E,QAAQ4E,OAAOC,EAAU7E,QAAQyE,QAAQxE,GAAQ,GAC3DwD,EAAekB,GACff,QAuBI,kBAAC,EAAD,CAAcX,SAxDL,kBAAM+B,QAAQC,IAAI5B,KAAKS,UAAU7E,OAyD1C,yBAAKiG,IAAKxB,IACV,kBAAC,EAAD,CAAiB/E,YAxDL,WAChB8E,EAAe,GAAD,mBAAKxE,GAAL,CAAkB0D,OAChCiB,IACAF,EAAUyB,QAAQC,eAAe,CAACC,SAAU,gBCrEhCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d3c8e51b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {field, tagField} from './App';\r\n\r\nexport const Query = (props) => {\r\n    const style = {\r\n        display: 'flex',\r\n    };\r\n    return (\r\n        <div style={style}>\r\n            <SearchBar\r\n                searchWords={props.searchWords}\r\n                onChangeSearchWords={props.onChangeSearchWords}\r\n            />\r\n            <TagBar\r\n                searchTags={props.searchTags}\r\n                onChangeSearchTags={props.onChangeSearchTags}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nconst SearchBar = (props) => {\r\n    const style = {\r\n        flex: '1 1 50%',\r\n    };\r\n    return (\r\n        <div style={style}>\r\n            <input\r\n                style={field}\r\n                type='text'\r\n                value={props.searchWords}\r\n                onChange={props.onChangeSearchWords}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nconst TagBar = (props) => {\r\n    const style = {\r\n        flex: '1 1 50%',\r\n        paddingLeft: '1rem',\r\n    };\r\n    return (\r\n        <div style={style}>\r\n            <input\r\n                style={tagField}\r\n                type='text'\r\n                value={props.searchTags}\r\n                onChange={props.onChangeSearchTags}\r\n            />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const AddSeriesButton = (props) => {\r\n    const style = {\r\n        backgroundColor: 'lightgreen',\r\n        position: 'fixed',\r\n        right: '5%',\r\n        bottom: '5%',\r\n        width: '96px',\r\n        height: '96px',\r\n        border: '2px darkgreen solid',\r\n        borderRadius: '50%',\r\n    };\r\n    return (\r\n        <div\r\n            style={style}\r\n            onClick={props.onAddSeries}\r\n        />\r\n    );\r\n};","import React from 'react';\r\nimport {clickable, field, tagField} from './App';\r\n\r\nconst lining = '2px #ccc solid';\r\nconst sidebarPercentWidth = 30;\r\nconst sidebar = {\r\n    width: `${sidebarPercentWidth}%`,\r\n};\r\nconst content = {\r\n    width: `${100 - sidebarPercentWidth}%`,\r\n    alignSelf: 'stretch',\r\n    borderLeft: lining,\r\n    paddingLeft: '1rem',\r\n};\r\n\r\nexport const SeriesList = (props) => {\r\n    return (\r\n        <ul>\r\n            {props.seriesArray.map((series, index) =>\r\n                <Series\r\n                    key={(Date.now() + index).toString(36)}\r\n                    series={series}\r\n                    onDeleteSeries={props.onDeleteSeries(series)}\r\n                    onAddEntry={props.onAddEntry(series)}\r\n                    saveEntry={props.saveEntry(series)}\r\n                    deleteEntry={props.deleteEntry(series)}\r\n                />)}\r\n        </ul>\r\n    );\r\n};\r\nconst Series = (props) => {\r\n    const style = {\r\n        margin: '1rem 0',\r\n        listStyle: 'none',\r\n    };\r\n    return (\r\n        <li style={style}>\r\n            <ul>\r\n                {props.series.entries.map((entry, index) =>\r\n                    <Entry\r\n                        key={(Date.now() + index).toString(36)}\r\n                        entry={entry}\r\n                        saveEntry={props.saveEntry(entry)}\r\n                        deleteEntry={props.deleteEntry}\r\n                    />)}\r\n            </ul>\r\n            {\r\n                (props.series.entries.length > 0)\r\n                    ? <div style={{display: 'flex'}}>\r\n                        <div style={sidebar}/>\r\n                        <AddEntryButton\r\n                            onAddEntry={props.onAddEntry}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    <div style={{display: 'flex'}}>\r\n                        <DeleteSeriesButton onDeleteSeries={props.onDeleteSeries}/>\r\n                        <AddEntryButton\r\n                            onAddEntry={props.onAddEntry}\r\n                        />\r\n                    </div>\r\n            }\r\n        </li>\r\n    );\r\n};\r\nconst AddEntryButton = (props) => {\r\n    const style = {\r\n        ...clickable,\r\n        ...content,\r\n        backgroundColor: 'lightgreen',\r\n    };\r\n    return <div\r\n        style={style}\r\n        onClick={props.onAddEntry}\r\n    />;\r\n};\r\nconst DeleteSeriesButton = (props) => {\r\n    const style = {\r\n        ...clickable,\r\n        ...sidebar,\r\n        backgroundColor: 'lightcoral',\r\n    };\r\n    return (\r\n        <div\r\n            style={style}\r\n            onClick={props.onDeleteSeries}\r\n        />\r\n    );\r\n};\r\nconst Entry = (props) => {\r\n    const [gist, setGist] = React.useState(props.entry.gist);\r\n    const [note, setNote] = React.useState(props.entry.note);\r\n    const [tags, setTags] = React.useState(props.entry.tags);\r\n    const [editing, setEditing] = React.useState(\r\n        (gist.length === 0)\r\n        && (note.length === 0)\r\n        && (tags.length === 0));\r\n\r\n    const onChangeGist = (e) => setGist(e.target.value);\r\n    const onChangeNote = (e) => setNote(e.target.value);\r\n    const onChangeTags = (e) => setTags(e.target.value);\r\n\r\n    const onToggle = () => {\r\n        if (editing) {\r\n            if (gist.length > 0\r\n                || note.length > 0\r\n                || tags.length > 0)\r\n                props.saveEntry(gist, note, tags);\r\n            else props.deleteEntry();\r\n        }\r\n        setEditing(!editing);\r\n    };\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        borderTop: '1px rgba(0,0,0,0.2) solid',\r\n    };\r\n    return (\r\n        <li style={style}>\r\n            <TimeStamp\r\n                entry={props.entry}\r\n                editing={editing}\r\n                onClick={onToggle}\r\n            />\r\n            {editing\r\n                ? <Editor\r\n                    entry={props.entry}\r\n                    gist={gist}\r\n                    onChangeGist={onChangeGist}\r\n                    note={note}\r\n                    onChangeNote={onChangeNote}\r\n                    tags={tags}\r\n                    onChangeTags={onChangeTags}\r\n                    onToggle={onToggle}\r\n                />\r\n                : <Info\r\n                    gist={gist}\r\n                    note={note}\r\n                    tags={tags}\r\n                />\r\n            }\r\n        </li>\r\n    );\r\n};\r\nconst TimeStamp = (props) => {\r\n    const style = {\r\n        ...clickable,\r\n        ...sidebar,\r\n        backgroundColor: props.editing ? 'lightblue' : 'white',\r\n        padding: '0 1rem',\r\n        fontSize: '80%',\r\n    };\r\n    return (\r\n        <div\r\n            style={style}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.entry.createdAt} ({props.entry.updatedAt})\r\n        </div>\r\n    );\r\n};\r\nconst Editor = (props) => {\r\n    const onKeyDown = (e) => {\r\n        if (e.key === 'Enter') props.onToggle();\r\n    };\r\n    const resizeTextarea = (e) => {\r\n        e.target.style.height = 'inherit';\r\n        e.target.style.height = `${e.target.scrollHeight}px`;\r\n    };\r\n\r\n    const style = {\r\n        ...content,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n        fontSize: '105%',\r\n    };\r\n    return (\r\n        <div style={style}>\r\n            <input\r\n                style={{...field, fontWeight: 'bold'}}\r\n                type='text'\r\n                value={props.gist}\r\n                onChange={props.onChangeGist}\r\n                onKeyDown={onKeyDown}\r\n            />\r\n            <textarea\r\n                style={{\r\n                    ...field,\r\n                    fontStyle: 'italic',\r\n                    whiteSpace: 'pre-wrap',\r\n                }}\r\n                value={props.note}\r\n                onChange={props.onChangeNote}\r\n                onKeyUp={resizeTextarea}\r\n                onFocus={resizeTextarea}\r\n            />\r\n            <input\r\n                style={tagField}\r\n                type='text'\r\n                value={props.tags}\r\n                onChange={props.onChangeTags}\r\n                onKeyDown={onKeyDown}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nconst Info = (props) => {\r\n    const [isExpanded, setIsExpanded] = React.useState(false);\r\n\r\n    const onToggle = () => setIsExpanded(!isExpanded);\r\n\r\n    const style = {\r\n        ...clickable,\r\n        ...content,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n        fontSize: '105%',\r\n    };\r\n    return (\r\n        <div\r\n            style={style}\r\n            onClick={onToggle}\r\n        >\r\n            {isExpanded\r\n                ? <div style={{backgroundColor: 'yellow', fontWeight: 'bold'}}>{props.gist}</div>\r\n                : <div style={{fontWeight: 'bold'}}>{props.gist}</div>}\r\n            {isExpanded\r\n            && <div style={{fontStyle: 'italic', whiteSpace: 'pre-wrap'}}>\r\n                {props.note}\r\n            </div>}\r\n            {isExpanded\r\n            && <div>\r\n                {props.tags}\r\n            </div>}\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport './App.css';\nimport {Query} from './Query';\nimport {AddSeriesButton} from './AddSeriesButton';\nimport {SeriesList} from './SeriesList';\n\nconst createSeries = (entries = []) => ({entries});\nconst createEntry =\n    (\n        gist = '',\n        note = '',\n        tags = '',\n    ) => ({\n        createdAt: new Date().toLocaleString('en-GB'),\n        updatedAt: new Date().toLocaleString('en-GB'),\n        gist, note, tags,\n    });\nconst updateEntry = (entry, gist, note, tags) => {\n    const newEntry = {...entry};\n    newEntry.updatedAt = new Date().toLocaleString('en-GB');\n    newEntry.gist = gist;\n    newEntry.note = note;\n    newEntry.tags = tags;\n    return newEntry;\n};\n\nconst lining = '2px #ccc solid';\nexport const clickable = {\n    minHeight: '48px',\n};\nexport const field = {\n    ...clickable,\n    padding: '0 1rem',\n    borderBottom: lining,\n};\nexport const tagField = {\n    ...clickable,\n    padding: '0 1rem',\n    border: lining,\n    borderRadius: '10px',\n};\n\nconst ExportButton = (props) =>\n    <div style={{...clickable, backgroundColor: 'gray'}} onClick={props.onExport}/>;\n\nconst App = () => {\n    const [searchWords, setSearchWords] = React.useState('');\n    const [searchTags, setSearchTags] = React.useState('');\n\n    const [seriesArray, setSeriesArray] = React.useState(JSON.parse(localStorage.getItem('seriesArray')) || []);\n    const bottomRef = React.useRef(null);\n\n    const onChangeSearchWords = (e) => setSearchWords(e.target.value);\n    const onChangeSearchTags = (e) => setSearchTags(e.target.value);\n    const querySeriesArray = () => {\n        let results = [...seriesArray];\n        if (searchWords) {\n            const lowercase = searchWords.toLowerCase();\n            results = results.filter(series => series.entries.some(\n                entry => entry.createdAt.toLowerCase().includes(lowercase)\n                    || entry.updatedAt.toLowerCase().includes(lowercase)\n                    || entry.gist.toLowerCase().includes(lowercase)\n                    || entry.note.toLowerCase().includes(lowercase),\n            ));\n        }\n        if (searchTags) {\n            const tagsArray = searchTags.toLowerCase().split(' ');\n            results = results.filter(series => series.entries.some(\n                entry => entry.tags.toLowerCase().split(' ').some(tag => tagsArray.indexOf(tag) > -1),\n            ));\n        }\n\n        return results;\n    };\n\n    const update = () => localStorage.setItem('seriesArray', JSON.stringify(seriesArray));\n    const onExport = () => console.log(JSON.stringify(seriesArray));\n\n    const onAddSeries = () => {\n        setSeriesArray([...seriesArray, createSeries()]);\n        update();\n        bottomRef.current.scrollIntoView({behavior: 'smooth'});\n    };\n    const onDeleteSeries = series => () => {\n        const newSeriesArray = [...seriesArray];\n        newSeriesArray.splice(newSeriesArray.indexOf(series), 1);\n        setSeriesArray(newSeriesArray);\n        update();\n    };\n    const onAddEntry = series => () => {\n        const newSeriesArray = [...seriesArray];\n        const newSeries = newSeriesArray[newSeriesArray.indexOf(series)];\n        newSeries.entries = [...newSeries.entries, createEntry()];\n        setSeriesArray(newSeriesArray);\n        update();\n    };\n\n    const saveEntry = series => entry => (gist, note, tags) => {\n        const newSeriesArray = [...seriesArray];\n        const newSeries = newSeriesArray[newSeriesArray.indexOf(series)];\n        newSeries.entries[newSeries.entries.indexOf(entry)] = updateEntry(entry, gist, note, tags);\n        setSeriesArray(newSeriesArray);\n        update();\n    };\n    const deleteEntry = series => entry => {\n        const newSeriesArray = [...seriesArray];\n        const newSeries = newSeriesArray[newSeriesArray.indexOf(series)];\n        newSeries.entries.splice(newSeries.entries.indexOf(entry), 1);\n        setSeriesArray(newSeriesArray);\n        update();\n    };\n\n    const appStyle = {\n        maxWidth: '900px',\n        margin: '0 auto',\n        padding: '1rem',\n    };\n    return (\n        <div style={appStyle}>\n            <Query\n                searchWords={searchWords}\n                onChangeSearchWords={onChangeSearchWords}\n                searchTags={searchTags}\n                onChangeSearchTags={onChangeSearchTags}\n            />\n            <SeriesList\n                seriesArray={querySeriesArray()}\n                onDeleteSeries={onDeleteSeries}\n                onAddEntry={onAddEntry}\n                saveEntry={saveEntry}\n                deleteEntry={deleteEntry}\n            />\n            <ExportButton onExport={onExport}/>\n            <div ref={bottomRef}/>\n            <AddSeriesButton onAddSeries={onAddSeries}/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}